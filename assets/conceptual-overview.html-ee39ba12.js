import{_ as e,o as t,c as o,e as i}from"./app-8a2f83c8.js";const n={},a=i('<h1 id="conceptual-overview" tabindex="-1"><a class="header-anchor" href="#conceptual-overview" aria-hidden="true">#</a> Conceptual Overview</h1><p>There are three <em>standard</em> ways to initiate a zkLogin flow on Android accommodating either Kotlin or/and Java Projects:</p><ul><li><strong>Context class Infix extension function style</strong>: ZeroAuth injects an infix extension function into the <code>Context</code> class accessible in your activity</li><li><strong>Functional style</strong>: This approach offers a top-level function requiring at least a <code>Context</code> and a <code>ZKLoginRequest</code> instances as inputs.</li><li><strong>Object-oriented style</strong>: ZeroAuth provides a default implementation of <code>ZKLoginService</code>. This encapsulates the zkLogin initiation process.</li></ul><p>In any of the aforementioned approaches, there exists a <strong>callable</strong>, <code>zkLogin</code>, which requires at minimum a <code>ZKLoginRequest</code> object. The <code>ZKLoginRequest</code> object, as its name implies, encapsulates a zkLogin request. It facilitates the configuration of an <strong>OAuth provider</strong> and the definition of a <em>salting</em> or <em>proving</em> service. This component is pivotal for extending core features of the framework, establishing a foundation for customization and scalability.</p><p>The zkLogin request yields an <code>intent</code> which should be utilized to launch the <code>ZKLoginManagementActivity</code>. This activity orchestrates the OAuth flow, managing the outcomes adeptly and relaying the result—usually a <code>ZKLoginResponse</code> upon success or <code>null</code> if failed—back to your calling activity. Through this mechanism, ZeroAuth ensures a smooth transition between the initiation of the login process and the handling of its result, providing a streamlined workflow for authentication within your Android application.</p>',5),s=[a];function c(r,l){return t(),o("div",null,s)}const h=e(n,[["render",c],["__file","conceptual-overview.html.vue"]]);export{h as default};
